from aiogram import Bot, Dispatcher, Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import asyncio

# –ñ–µ—Å—Ç–∫–æ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
API_TOKEN = "7523149130:AAEdNU6qIufnERaQktoM2ZeMJ4OsGemO3kY"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω Telegram
ADMIN_ID = 715337316         # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Ä–æ—É—Ç–µ—Ä–∞
bot = Bot(token=API_TOKEN)
router = Router()
dp = Dispatcher()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM
class Form(StatesGroup):
    name = State()          # –ò–º—è –≥–æ—Å—Ç—è
    partner_name = State()  # –ò–º—è –ø–∞—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    drinks = State()        # –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º
    custom_drink = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def start(message: Message, state: FSMContext):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üéâ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ–±–µ.",
        reply_markup=ReplyKeyboardRemove()
    )
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(Form.name)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏
@router.message(Form.name)
async def process_name(message: Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        return
    await state.update_data(name=message.text)
    await message.answer("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–∞—Ä—É, –≤–≤–µ–¥–∏—Ç–µ –µ—ë –∏–º—è. –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'.")
    await state.set_state(Form.partner_name)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–∞—Ä—ã
@router.message(Form.partner_name)
async def process_partner_name(message: Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        return
    await state.update_data(partner_name=message.text)
    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤
    drinks_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ")],
            [KeyboardButton(text="–ö—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ"), KeyboardButton(text="–ë–µ–ª–æ–µ –≤–∏–Ω–æ")],
            [KeyboardButton(text="–°—É—Ö–æ–µ –≤–∏–Ω–æ"), KeyboardButton(text="–ü–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ")],
            [KeyboardButton(text="–ò–≥—Ä–∏—Å—Ç–æ–µ –≤–∏–Ω–æ"), KeyboardButton(text="–í–æ–¥–∫–∞")],
            [KeyboardButton(text="–°–∞–º–æ–≥–æ–Ω"), KeyboardButton(text="–ö–æ–Ω—å—è–∫")],
            [KeyboardButton(text="–ù–∞—Å—Ç–æ–π–∫–∏")],
            [KeyboardButton(text="–î—Ä—É–≥–æ–µ")],  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞
            [KeyboardButton(text="–ì–æ—Ç–æ–≤–æ"), KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ (–Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ', –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ):",
        reply_markup=drinks_keyboard
    )
    await state.update_data(drinks=[])  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤
    await state.set_state(Form.drinks)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤
@router.message(Form.drinks)
async def process_drinks(message: Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        return
    if message.text.lower() == "–≥–æ—Ç–æ–≤–æ":
        data = await state.get_data()
        guest_info = (
            f"üéâ –ù–æ–≤—ã–π –≥–æ—Å—Ç—å:\n"
            f"–ò–º—è: {data['name']}\n"
            f"–ü–∞—Ä–∞: {data['partner_name']}\n"
            f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–ø–∏—Ç–∫–∏: {', '.join(data['drinks']) if data['drinks'] else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}"
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await bot.send_message(chat_id=ADMIN_ID, text=guest_info)
        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! üéâ", reply_markup=ReplyKeyboardRemove())
        await state.clear()  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        return
    if message.text.lower() == "–¥—Ä—É–≥–æ–µ":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞:")
        await state.set_state(Form.custom_drink)
        return
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞ –≤ —Å–ø–∏—Å–æ–∫
    data = await state.get_data()
    drinks = data.get('drinks', [])
    if message.text not in drinks:
        drinks.append(message.text)
        await state.update_data(drinks=drinks)
    await message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {message.text}. –í—ã–±–µ—Ä–∏—Ç–µ –µ—â–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞
@router.message(Form.custom_drink)
async def process_custom_drink(message: Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        return
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞ –≤ —Å–ø–∏—Å–æ–∫
    data = await state.get_data()
    drinks = data.get('drinks', [])
    drinks.append(message.text)
    await state.update_data(drinks=drinks)
    await message.answer(f"–í—ã –¥–æ–±–∞–≤–∏–ª–∏: {message.text}. –í—ã–±–µ—Ä–∏—Ç–µ –µ—â–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.")
    await state.set_state(Form.drinks)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
